(global.webpackJsonp=global.webpackJsonp||[]).push([[5],{339:function(r,t,o){"use strict";o.r(t);var e=o(0),n=o(87),a=o(26),i=o(134),s=o(28),l=o(13),d=o(62),c=o(12),u=o(345),g=o(42),p=o(337),f=function(){function r(r,t,o,e){this.page=r;this.router=t;this.formBuilder=o;this.loginService=e;this.processing=!1;this.loader=new p.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(r){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}};this.page.actionBarHidden=!0;this.feedback=new u.Feedback}r.prototype.ngOnInit=function(){this.form=this.formBuilder.group({username:["",l.Validators.required],password:["",l.Validators.required]})};r.prototype.isFieldValid=function(r){return!this.form.get(r).valid&&(this.form.get(r).dirty||this.form.get(r).touched)};r.prototype.displayFieldCss=function(r){return{"is-invalid":this.form.get(r).invalid&&(this.form.get(r).dirty||this.form.get(r).touched),"is-valid":this.form.get(r).valid&&(this.form.get(r).dirty||this.form.get(r).touched)}};r.prototype.signIn=function(){var r=this;if(this.form.valid){this.loader.show(this.lodaing_options);this.loginService.login(this.form.value).subscribe(function(t){console.log(t);Object(c.clear)();Object(c.setBoolean)("isLoggedin",!0);Object(c.setString)("email",t.email);Object(c.setString)("contact_no",t.contact_no.toString());Object(c.setString)("user_id",t.user_id.toString());r.loader.hide();r.router.navigate(["/"])},function(t){r.loader.hide();console.log(t);r.feedback.error({title:t.error.non_field_errors[0],backgroundColor:new g.Color("red"),titleColor:new g.Color("black"),position:u.FeedbackPosition.Bottom,type:u.FeedbackType.Custom})})}else this.markFormGroupTouched(this.form)};r.prototype.markFormGroupTouched=function(r){var t=this;Object.values(r.controls).forEach(function(r){r.markAsTouched();r.controls&&r.controls.forEach(function(r){return t.markFormGroupTouched(r)})})};r.prototype.skip=function(){Object(c.setBoolean)("isSkipped",!0);this.router.navigate(["/"])};r.prototype.forgotPassword=function(){Object(i.prompt)({title:"Forgot Password",message:"Enter the email address you used to register for Shyam Future Store to reset your password.",inputType:"email",defaultText:"",okButtonText:"Ok",cancelButtonText:"Cancel"}).then(function(r){r.result})};r=__decorate([Object(e.Component)({selector:"login",template:o(385),styles:[o(384)]}),__metadata("design:paramtypes",[s.Page,a.RouterExtensions,l.FormBuilder,d.a])],r);return r}(),m=[{path:"",component:f}],b=function(){function r(){}r=__decorate([Object(e.NgModule)({imports:[a.NativeScriptRouterModule.forChild(m)],exports:[a.NativeScriptRouterModule]})],r);return r}(),h=o(101);o.d(t,"LoginModule",function(){return y});var y=function(){function r(){}r=__decorate([Object(e.NgModule)({imports:[n.NativeScriptCommonModule,b,h.a],declarations:[f],schemas:[e.NO_ERRORS_SCHEMA]})],r);return r}()},384:function(r,t){r.exports=".login-page {\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background: #fff;\r\n    /* background-image: url('~/images/pre-bg.jpg');\r\n    background-repeat: no-repeat;\r\n    background-size: cover; */\r\n}\r\n\r\n.logo {\r\n    margin-bottom: 30;\r\n    width: 200;\r\n    font-weight: bold;\r\n}\r\n\r\n.full-content {\r\n    margin-left: 30;\r\n    margin-right: 30;\r\n    flex-grow: 2;\r\n    vertical-align: middle;\r\n}\r\n\r\n.apps-container {\r\n    background-color: #dedede;\r\n    border-radius: 5;\r\n    -webkit-box-shadow: 0 0 18 3 rgba(0, 0, 0, 0.61);\r\n    -moz-box-shadow: 0 0 18 3 rgba(0, 0, 0, 0.61);\r\n    box-shadow: 0 0 18 3 rgba(0, 0, 0, 0.61);\r\n    padding: 25;\r\n}\r\n\r\n.head-line-store {\r\n    color: #284058;\r\n    text-align: center;\r\n    font-size: 25;\r\n    font-weight: 600;\r\n    margin-bottom: 25;\r\n}\r\n\r\n.tag-line-grey {\r\n    color: #284058;\r\n    text-align: center;\r\n    font-size: 15;\r\n}\r\n\r\n.tag-line-grey .bold-tag {\r\n    font-weight: 600;\r\n}\r\n\r\n.skip-text {\r\n    font-weight: 600;\r\n    text-decoration: underline;\r\n}"},385:function(r,t){r.exports='<FlexboxLayout class="login-page">\r\n    <StackLayout class="full-content">\r\n        <Image class="logo" src="~/images/logo.png"></Image>\r\n        <StackLayout class="apps-container">\r\n            <StackLayout class="form" [formGroup]="form" novalidate>\r\n                <label class="head-line-store hedding-font" text="Partner App"></label>\r\n                <GridLayout rows="auto, auto">\r\n                    <StackLayout class="input-filld" row="0">\r\n                        <TextField class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" hint="Email id / Mobile Number " returnKeyType="next" [isEnabled]="!processing" formControlName="username" [ngClass]="displayFieldCss(\'username\')"\r\n                            height="40" padding="10" fontSize="12"></TextField>\r\n                        <StackLayout *ngIf="isFieldValid(\'username\')" class="invalid-feedback">\r\n                            <Label fontSize="8" text="User name is required"></Label>\r\n                        </StackLayout>\r\n                    </StackLayout>\r\n\r\n\r\n                    <StackLayout class="input-filld" row="1">\r\n                        <TextField hint="Password" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" secure="true" returnKeyType="done" [isEnabled]="!processing" formControlName="password" [ngClass]="displayFieldCss(\'password\')"\r\n                            height="40" padding="10" fontSize="12"></TextField>\r\n                        <StackLayout *ngIf="isFieldValid(\'password\')" class="invalid-feedback">\r\n                            <Label fontSize="8" text="Password is required"></Label>\r\n                        </StackLayout>\r\n                    </StackLayout>\r\n                    <ActivityIndicator [busy]="processing"></ActivityIndicator>\r\n                </GridLayout>\r\n\r\n                <Button class="btn btn-primary" text="Sign In" [isEnabled]="!processing" (tap)="signIn()" backgroundColor="#6c6969" color="#fff" width="50%">\r\n                </Button>\r\n                <StackLayout class="hr-light pading-gap m-b-10 m-t-10"></StackLayout>\r\n                <Label text="Forgot your password?" class="tag-line-grey m-b-10 m-t-10" (tap)="forgotPassword()"></Label>\r\n\r\n                \x3c!-- <Label class="tag-line-grey m-b-10 m-t-10" [nsRouterLink]="[\'/signup\']">\r\n                    <FormattedString>\r\n                        <Span text="New User? "></Span>\r\n                        <Span text="Sign up" class="bold-tag" ></Span>\r\n                    </FormattedString>\r\n                </Label> --\x3e\r\n                \x3c!-- <Button class="btn" text="facebook" (tap)="onTap($event)" backgroundColor="#4267B2" color="#fff" width="100%">\r\n                </Button>\r\n\r\n                <Button class="btn" text="Google" (tap)="onTap($event)" backgroundColor="#EA4335" color="#fff" width="100%">\r\n                </Button> --\x3e\r\n            </StackLayout>\r\n\r\n        </StackLayout>\r\n    </StackLayout>\r\n</FlexboxLayout>'}}]);