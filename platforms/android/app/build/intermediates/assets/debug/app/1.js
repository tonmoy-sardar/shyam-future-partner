(global.webpackJsonp=global.webpackJsonp||[]).push([[1],{342:function(e,t,r){"use strict";r.r(t);var o=r(0),a=r(87),n=r(26),i=r(37),s=r(86),c=function(){function e(e,t){this.route=e;this.CreatedAppService=t}e.prototype.ngOnInit=function(){this.app_id=this.route.snapshot.params.id};e=__decorate([Object(o.Component)({selector:"created-app",template:r(377),styles:[r(376)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a])],e);return e}(),l=r(10),d=r(337),u=r(343),p=function(){function e(e,t,r){this.route=e;this.CreatedAppService=t;this.location=r;this.app_data={logo:"",business_name:""};this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getAppDetails(this.app_id)};e.prototype.getAppDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getCreatedAppDetails(e).subscribe(function(e){t.app_details=e;t.app_data.logo=t.app_details.logo;t.app_data.business_name=t.app_details.business_name;t.visible_key=!0;console.log(e);t.loader.hide()},function(e){t.loader.hide();console.log(e)})};e.prototype.shareApp=function(){u.shareText("I love NativeScript!")};e=__decorate([Object(o.Component)({selector:"details-app",template:r(375),styles:[r(374)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,l.Location])],e);return e}(),g=r(22),m=r(102),h=function(){function e(e,t,r,o,a){this.route=e;this.CreatedAppService=t;this.modal=r;this.vcRef=o;this.location=a;this.app_data={logo:"",business_name:""};this.options={context:{},fullscreen:!1,viewContainerRef:this.vcRef};this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getAppDetails(this.app_id);this.imageUrl=null};e.prototype.getAppDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getCreatedAppDetails(e).subscribe(function(e){t.app_details=e;t.app_data.logo=t.app_details.logo;t.app_data.business_name=t.app_details.business_name;t.visible_key=!0;console.log(e);t.loader.hide()},function(e){console.log(e);t.loader.hide()})};e.prototype.pickLogo=function(){var e=this;this.modal.showModal(m.a,this.options).then(function(t){console.log(t);if(void 0!=t)if(1==t.camera){console.log(t.image);e.imageUrl=t.image;e.app_data.logo="data:image/png;base64,"+t.image;var r={id:e.app_id,logo:"data:image/png;base64,"+t.image};e.updateAppLogo(r)}else if(1==t.gallery){console.log(t.image);e.imageUrl=t.image;e.app_data.logo="data:image/png;base64,"+t.image;r={id:e.app_id,logo:"data:image/png;base64,"+t.image};e.updateAppLogo(r)}})};e.prototype.updateAppLogo=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.editAppLogo(e).subscribe(function(e){t.loader.hide();t.getAppDetails(t.app_id);console.log(e)},function(e){t.loader.hide();console.log(e)})};e=__decorate([Object(o.Component)({selector:"manage-app",template:r(373),styles:[r(372)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,g.ModalDialogService,o.ViewContainerRef,l.Location])],e);return e}(),f=r(13),b=function(){function e(e,t,r,o,a){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.location=a;this.app_data={logo:"",business_name:"",business_description:""};this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getAppDetails(this.app_id);this.form=this.formBuilder.group({business_name:["",f.Validators.required],business_description:["",f.Validators.required]})};e.prototype.getAppDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getCreatedAppDetails(e).subscribe(function(e){t.app_details=e;t.app_data.logo=t.app_details.logo;t.app_data.business_name=t.app_details.business_name;t.app_data.business_description=t.app_details.business_description;t.visible_key=!0;console.log(e);t.loader.hide()},function(e){console.log(e);t.loader.hide()})};e.prototype.updateAppInfo=function(){var e=this;if(this.form.valid){console.log("aaa");console.log(this.form.value);this.loader.show(this.lodaing_options);this.CreatedAppService.updateAppInfo(this.app_id,this.form.value).subscribe(function(t){console.log("Success");e.loader.hide();e.router.navigate(["/created-app/"+e.app_id+"/manage-app"])},function(t){e.loader.hide();console.log(t)})}else this.markFormGroupTouched(this.form)};e.prototype.markFormGroupTouched=function(e){var t=this;Object.values(e.controls).forEach(function(e){e.markAsTouched();e.controls&&e.controls.forEach(function(e){return t.markFormGroupTouched(e)})})};e.prototype.isFieldValid=function(e){return!this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)};e.prototype.displayFieldCss=function(e){return{"is-invalid":this.form.get(e).invalid&&(this.form.get(e).dirty||this.form.get(e).touched),"is-valid":this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)}};e=__decorate([Object(o.Component)({selector:"edit-app",template:r(371),styles:[r(370)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,l.Location])],e);return e}(),y=function(){function e(e,t,r,o,a){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.location=a;this.processing=!1;this.app_data={logo:"",business_name:"",business_description:""};this.category_list=[];this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getAppDetails(this.app_id);this.form=this.formBuilder.group({business_name:["",f.Validators.required],business_description:["",f.Validators.required]})};e.prototype.getAppDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getCreatedAppDetails(e).subscribe(function(e){t.app_details=e;t.app_data.logo=t.app_details.logo;t.app_data.business_name=t.app_details.business_name;t.app_data.business_description=t.app_details.business_description;t.category_list=t.app_details.app_product_categories;for(var r=0;r<t.category_list.length;r++)t.category_list[r].items=JSON.parse(JSON.stringify(t.category_list[r].products));console.log(e);t.visible_key=!0;console.log(e);t.loader.hide()},function(e){t.loader.hide();console.log(e)})};e.prototype.deleteProductCategory=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.deleteProductCategory(e,{is_active:!1}).subscribe(function(e){console.log("Success");t.loader.hide();t.router.navigate(["/created-app/"+t.app_id+"products"])},function(e){t.loader.hide();console.log(e)})};e.prototype.deleteProduct=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.deleteProduct(e,{is_active:!1}).subscribe(function(e){console.log("Success");t.loader.hide();t.router.navigate(["/created-app/"+t.app_id+"products"])},function(e){t.loader.hide();console.log(e)})};e.prototype.getDiscount=function(e,t){return Math.floor(100*(e-t)/e)+"%"};e.prototype.markFormGroupTouched=function(e){var t=this;Object.values(e.controls).forEach(function(e){e.markAsTouched();e.controls&&e.controls.forEach(function(e){return t.markFormGroupTouched(e)})})};e.prototype.isFieldValid=function(e){return!this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)};e.prototype.displayFieldCss=function(e){return{"is-invalid":this.form.get(e).invalid&&(this.form.get(e).dirty||this.form.get(e).touched),"is-valid":this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)}};e=__decorate([Object(o.Component)({selector:"products",template:r(369),styles:[r(368)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,l.Location])],e);return e}(),_=function(){function e(e,t,r,o,a){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.location=a;this.processing=!1;this.product_category_data={category_name:"",description:"",app_master:""};this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.product_category_id=this.route.snapshot.params.cat_id;this.getProductCategoryDetails(this.product_category_id);this.form=this.formBuilder.group({category_name:["",f.Validators.required],description:[""]})};e.prototype.getProductCategoryDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getProductCategoryDetails(e).subscribe(function(e){t.product_category_details=e;t.product_category_data.category_name=t.product_category_details.category_name;t.product_category_data.description=t.product_category_details.description;t.product_category_data.app_master=t.app_id;t.visible_key=!0;console.log(e);t.loader.hide()},function(e){console.log(e);t.loader.hide()})};e.prototype.updateProductCategory=function(){var e=this;if(this.form.valid){console.log("aaa");console.log(this.product_category_data);this.loader.show(this.lodaing_options);this.CreatedAppService.updateProductCategory(this.product_category_id,this.product_category_data).subscribe(function(t){console.log("Success");e.loader.hide();e.router.navigate(["/created-app/"+e.app_id+"/products"])},function(t){e.loader.hide();console.log(t)})}else this.markFormGroupTouched(this.form)};e.prototype.markFormGroupTouched=function(e){var t=this;Object.values(e.controls).forEach(function(e){e.markAsTouched();e.controls&&e.controls.forEach(function(e){return t.markFormGroupTouched(e)})})};e.prototype.isFieldValid=function(e){return!this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)};e.prototype.displayFieldCss=function(e){return{"is-invalid":this.form.get(e).invalid&&(this.form.get(e).dirty||this.form.get(e).touched),"is-valid":this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)}};e=__decorate([Object(o.Component)({selector:"edit-product-category",template:r(367),styles:[r(366)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,l.Location])],e);return e}(),L=function(){function e(e,t,r,o,a){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.location=a;this.processing=!1;this.product_category_data={category_name:"",description:"",app_master:""};this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.form=this.formBuilder.group({category_name:["",f.Validators.required],description:[""]})};e.prototype.createProductCategory=function(){var e=this;if(this.form.valid){console.log("aaa");this.product_category_data.app_master=this.app_id;console.log(this.product_category_data);this.loader.show(this.lodaing_options);this.CreatedAppService.createProductCategory(this.product_category_data).subscribe(function(t){console.log("Success");e.loader.hide();e.router.navigate(["/created-app/"+e.app_id+"/products"])},function(t){e.loader.hide();console.log(t)})}else this.markFormGroupTouched(this.form)};e.prototype.markFormGroupTouched=function(e){var t=this;Object.values(e.controls).forEach(function(e){e.markAsTouched();e.controls&&e.controls.forEach(function(e){return t.markFormGroupTouched(e)})})};e.prototype.isFieldValid=function(e){return!this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)};e.prototype.displayFieldCss=function(e){return{"is-invalid":this.form.get(e).invalid&&(this.form.get(e).dirty||this.form.get(e).touched),"is-valid":this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)}};e=__decorate([Object(o.Component)({selector:"add-product-category",template:r(365),styles:[r(364)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,l.Location])],e);return e}(),w=function(){function e(e,t,r,o,a){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.location=a;this.product_data={product_name:"",price:"",discounted_price:"",packing_charges:"",tags:"",app_master:"",product_category:""};this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.cat_id=this.route.snapshot.params.cat_id;console.log(this.cat_id);console.log(this.app_id);this.form=this.formBuilder.group({product_name:["",f.Validators.required],price:["",f.Validators.required],discounted_price:[""],packing_charges:[""],tags:[""]})};e.prototype.createProduct=function(){var e=this;if(this.form.valid){this.product_data.app_master=this.app_id;this.product_data.product_category=this.cat_id;console.log(this.product_data);this.loader.show(this.lodaing_options);this.CreatedAppService.createProduct(this.product_data).subscribe(function(t){e.loader.hide();console.log("Success");e.router.navigate(["/created-app/"+e.app_id+"/products"])},function(t){e.loader.hide();console.log(t)})}else this.markFormGroupTouched(this.form)};e.prototype.markFormGroupTouched=function(e){var t=this;Object.values(e.controls).forEach(function(e){e.markAsTouched();e.controls&&e.controls.forEach(function(e){return t.markFormGroupTouched(e)})})};e.prototype.isFieldValid=function(e){return!this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)};e.prototype.displayFieldCss=function(e){return{"is-invalid":this.form.get(e).invalid&&(this.form.get(e).dirty||this.form.get(e).touched),"is-valid":this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)}};e=__decorate([Object(o.Component)({selector:"add-product",template:r(363),styles:[r(362)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,l.Location])],e);return e}(),x=function(){function e(e,t,r,o,a){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.location=a;this.product_data={product_name:"",price:"",discounted_price:"",packing_charges:"",tags:"",app_master:"",product_category:""};this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.product_id=this.route.snapshot.params.product_id;console.log(this.product_id);console.log(this.app_id);this.getProductDetails(this.product_id);this.form=this.formBuilder.group({product_name:["",f.Validators.required],price:["",f.Validators.required],discounted_price:[""],packing_charges:[""],tags:[""]})};e.prototype.getProductDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getProductDetails(e).subscribe(function(e){t.product_details=e;t.product_data.product_name=t.product_details.product_name;t.product_data.price=t.product_details.price;t.product_data.discounted_price=t.product_details.discounted_price;t.product_data.packing_charges=t.product_details.packing_charges;t.product_data.tags=t.product_details.tags;t.product_data.app_master=t.product_details.app_master;t.product_data.product_category=t.product_details.product_category;t.visible_key=!0;console.log(e);t.loader.hide()},function(e){t.loader.hide();console.log(e)})};e.prototype.updateProduct=function(){var e=this;if(this.form.valid){console.log(this.product_data);this.loader.show(this.lodaing_options);this.CreatedAppService.updateProduct(this.product_id,this.product_data).subscribe(function(t){console.log("Success");e.loader.hide();e.router.navigate(["/created-app/"+e.app_id+"/products"])},function(t){e.loader.hide();console.log(t)})}else this.markFormGroupTouched(this.form)};e.prototype.markFormGroupTouched=function(e){var t=this;Object.values(e.controls).forEach(function(e){e.markAsTouched();e.controls&&e.controls.forEach(function(e){return t.markFormGroupTouched(e)})})};e.prototype.isFieldValid=function(e){return!this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)};e.prototype.displayFieldCss=function(e){return{"is-invalid":this.form.get(e).invalid&&(this.form.get(e).dirty||this.form.get(e).touched),"is-valid":this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)}};e=__decorate([Object(o.Component)({selector:"edit-product",template:r(361),styles:[r(360)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,l.Location])],e);return e}(),k=r(136),v=function(){function e(e,t,r,o,a,n){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.customerService=a;this.location=n;this.processing=!1;this.customer_list=[];this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getCustomerList(this.app_id)};e.prototype.getCustomerList=function(e){var t=this;this.loader.show(this.lodaing_options);this.customerService.getCustomerListByApp(e).subscribe(function(e){t.loader.hide();console.log(e);t.customer_list=e;t.visible_key=!0},function(e){t.loader.hide();console.log(e)})};e=__decorate([Object(o.Component)({selector:"customers",template:r(359),styles:[r(358)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,k.a,l.Location])],e);return e}(),S=r(133),C=function(){function e(e,t,r,o,a,n){this.route=e;this.CreatedAppService=t;this.formBuilder=r;this.router=o;this.messageService=a;this.location=n;this.processing=!1;this.chats=[];this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getChatMembersDetails()};e.prototype.getChatMembersDetails=function(){var e=this,t=(this.app_id,"?user="+this.app_id+"&user_type=app_master");this.loader.show(this.lodaing_options);this.messageService.getChatMembersDetails(t).subscribe(function(t){console.log(t);e.chats=t;e.loader.hide()},function(t){console.log(t);e.loader.hide()})};e=__decorate([Object(o.Component)({selector:"messages",template:r(357),styles:[r(356)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,f.FormBuilder,n.RouterExtensions,S.a,l.Location])],e);return e}();r(239);var A=function(){function e(e,t,r,o,a,n){this.route=e;this.location=t;this.messageService=r;this.router=o;this.zone=a;this.CreatedAppService=n;this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}};this.messages=[];this.message=""}e.prototype.ngOnInit=function(){var e=this,t=this.location.path().split("/");this.app_id=t[2].trim();this.user_id=this.route.snapshot.params.user;this.createChatSession();this.socket=new WebSocket("ws://132.148.147.239:8001/messages/?sender="+this.app_id+"&sender_type=app_master&receiver="+this.user_id+"&receiver_type=customer");this.socket.onopen=function(t){return e.onOpen(t)};this.socket.onclose=function(t){return e.onClose(t)};this.socket.onmessage=function(t){return e.onMessage(t)};this.socket.onerror=function(t){return e.onError(t)}};e.prototype.onOpen=function(e){console.log(e);console.log("Welcome to the chat!")};e.prototype.onClose=function(e){console.log("You have been disconnected")};e.prototype.onMessage=function(e){var t=this;console.log(JSON.parse(e.data));var r=JSON.parse(e.data);this.zone.run(function(){var e={text:r.message,created:new Date};r.chat_user==t.app_id?e.sender=!0:e.sender=!1;t.messages.push(e);t.scrollToBottom()})};e.prototype.onError=function(e){console.log("The socket had an error")};e.prototype.ngOnDestroy=function(){};e.prototype.isViewed=function(e){return!1};e.prototype.send=function(){if(this.message){var e={chat_user:this.app_id,chat_user_type:"app_master",message:this.message};this.socket.send(JSON.stringify(e));this.message=""}};e.prototype.createChatSession=function(){var e=this,t="?sender="+this.app_id+"&sender_type=app_master&receiver="+this.user_id+"&receiver_type=customer";this.loader.show(this.lodaing_options);this.messageService.createChatSessionView(t,{chat_user:"",message:"",chat_user_type:""}).subscribe(function(t){e.loader.hide();console.log(t);var r=t.thread;e.getMessageList(r)},function(t){e.loader.hide();console.log(t)})};e.prototype.getMessageList=function(e){var t=this;this.loader.show(this.lodaing_options);this.messageService.getMessageListByCustomer(e).subscribe(function(e){console.log(e);e.forEach(function(e){var r={text:e.message,created:e.datetime};e.chat_user==t.app_id?r.sender=!0:r.sender=!1;t.messages.push(r);console.log(t.messages);t.scrollToBottom()});t.loader.hide()},function(e){t.loader.hide();console.log(e)})};e.prototype.scrollToBottom=function(){var e=this;setTimeout(function(){e.scrollList.nativeElement.scrollToVerticalOffset(1e5)},1e3)};__decorate([Object(o.ViewChild)("ScrollList"),__metadata("design:type",o.ElementRef)],e.prototype,"scrollList",void 0);e=__decorate([Object(o.Component)({selector:"chat",template:r(355),styles:[r(354)]}),__metadata("design:paramtypes",[i.ActivatedRoute,l.Location,S.a,n.RouterExtensions,o.NgZone,s.a])],e);return e}(),F=r(240),I=r(125),V=function(){function e(e,t,r,o,a,n,i){this.route=e;this.CreatedAppService=t;this.modal=r;this.vcRef=o;this.formBuilder=a;this.router=n;this.location=i;this.owner_details={owner_name:"",owner_designation:"",owner_pic:"",business_est_year:"",store_address:"",lat:"",long:""};this.options={context:{},fullscreen:!1,viewContainerRef:this.vcRef};this.owner_data={owner_name:"",owner_designation:"",business_est_year:"",store_address:"",lat:"",long:""};this.selectedIndex=null;this.hint="Select Designation";this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.form=this.formBuilder.group({owner_name:["",f.Validators.required],owner_designation:[""],business_est_year:[""],store_address:[""],lat:[""],long:[""]});this.getDesignationDropdown()};e.prototype.onchange=function(e){console.log("Drop Down selected index changed from "+e.oldIndex+" to "+e.newIndex+'. New value is "'+this.designations.getValue(e.newIndex)+'"');this.owner_details.owner_designation=this.designations.getValue(e.newIndex)};e.prototype.getDesignationDropdown=function(){var e=this;this.CreatedAppService.getDesignationDropdown().subscribe(function(t){console.log(t);e.designations=new F.ValueList;for(var r=0;r<t.length;r++)e.designations.push({value:t[r].id,display:t[r].designation_name});e.getAppOwnerDetails(e.app_id)},function(e){console.log(e)})};e.prototype.getAppOwnerDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getOwnerInfo(e).subscribe(function(e){t.owner_details=e;t.selectedIndex=t.designations.getIndex(t.owner_details.owner_designation.toString());console.log(t.selectedIndex);console.log(t.owner_details.owner_designation);t.visible_key=!0;console.log(e);t.loader.hide()},function(e){console.log(e);t.loader.hide()})};e.prototype.searchLocation=function(){var e=this,t={context:{},fullscreen:!0,viewContainerRef:this.vcRef};this.modal.showModal(I.a,t).then(function(t){console.log(t);if(""!=t.name){e.owner_details.store_address=t.name;e.owner_details.lat=t.latitude;e.owner_details.long=t.longitude}})};e.prototype.pickLogo=function(){var e=this;this.modal.showModal(m.a,this.options).then(function(t){console.log(t);if(void 0!=t)if(1==t.camera){console.log(t.image);e.owner_details.owner_pic="data:image/png;base64,"+t.image;var r={id:e.app_id,owner_pic:"data:image/png;base64,"+t.image};e.updateOwnerLogo(r)}else if(1==t.gallery){console.log(t.image);r={id:e.app_id,owner_pic:"data:image/png;base64,"+t.image};e.updateOwnerLogo(r);e.owner_details.owner_pic="data:image/png;base64,"+t.image}})};e.prototype.updateOwnerLogo=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.editOwnerLogo(e).subscribe(function(e){t.loader.hide();t.getAppOwnerDetails(t.app_id);console.log(e)},function(e){t.loader.hide();console.log(e)})};e.prototype.updateOwnerInfo=function(){var e=this;if(this.form.valid){this.owner_data={id:this.app_id,owner_name:this.owner_details.owner_name,owner_designation:this.owner_details.owner_designation,business_est_year:this.owner_details.business_est_year,store_address:this.owner_details.store_address,lat:this.owner_details.lat,long:this.owner_details.long};this.loader.show(this.lodaing_options);this.CreatedAppService.editOwnerInfo(this.owner_data).subscribe(function(t){e.loader.hide();console.log(t);e.router.navigate(["/created-app/"+e.app_id+"/manage-app"])},function(t){e.loader.hide();console.log(t)})}else this.markFormGroupTouched(this.form)};e.prototype.markFormGroupTouched=function(e){var t=this;Object.values(e.controls).forEach(function(e){e.markAsTouched();e.controls&&e.controls.forEach(function(e){return t.markFormGroupTouched(e)})})};e.prototype.isFieldValid=function(e){return!this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)};e.prototype.displayFieldCss=function(e){return{"is-invalid":this.form.get(e).invalid&&(this.form.get(e).dirty||this.form.get(e).touched),"is-valid":this.form.get(e).valid&&(this.form.get(e).dirty||this.form.get(e).touched)}};e=__decorate([Object(o.Component)({selector:"edit-owner-info",template:r(353),styles:[r(352)]}),__metadata("design:paramtypes",[i.ActivatedRoute,s.a,g.ModalDialogService,o.ViewContainerRef,f.FormBuilder,n.RouterExtensions,l.Location])],e);return e}(),B=r(8),T=function(){function e(e,t,r,o,a,n,i){this.route=e;this.formBuilder=t;this.router=r;this.modal=o;this.vcRef=a;this.CreatedAppService=n;this.location=i;this.processing=!1;this.options={context:{},fullscreen:!1,viewContainerRef:this.vcRef};this.gallery_images=[];this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getAppDetails(this.app_id)};e.prototype.getAppDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.getCreatedAppDetails(e).subscribe(function(e){t.app_details=e;t.gallery_images=[];t.app_details.app_imgs.length>0&&t.app_details.app_imgs.forEach(function(e){var r={id:e.id,app_master_id:e.app_master_id,app_img:B.b+e.app_img};t.gallery_images.push(r)});t.visible_key=!0;console.log(e);console.log(t.gallery_images);t.loader.hide()},function(e){console.log(e);t.loader.hide()})};e.prototype.pickBusinessImages=function(e){var t=this;this.modal.showModal(m.a,this.options).then(function(r){console.log(r);if(void 0!=r)if(1==r.camera){console.log(r.image);var o={app_image_id:e,appmaster:t.app_id,app_images:"data:image/png;base64,"+r.image};t.updateBusinessImages(o)}else if(1==r.gallery){console.log(r.image);o={app_image_id:e,appmaster:t.app_id,app_images:"data:image/png;base64,"+r.image};t.updateBusinessImages(o)}})};e.prototype.pickNewBusinessImages=function(){var e=this;this.modal.showModal(m.a,this.options).then(function(t){console.log(t);if(void 0!=t)if(1==t.camera){console.log(t.image);var r={app_image_id:0,appmaster:e.app_id,app_images:"data:image/png;base64,"+t.image};e.updateBusinessImages(r)}else if(1==t.gallery){console.log(t.image);r={app_image_id:0,appmaster:e.app_id,app_images:"data:image/png;base64,"+t.image};e.updateBusinessImages(r)}})};e.prototype.updateBusinessImages=function(e){var t=this;this.loader.show(this.lodaing_options);this.CreatedAppService.updateBusinessImages(e).subscribe(function(e){t.getAppDetails(t.app_id);console.log(e);t.loader.hide()},function(e){console.log(e);t.loader.hide()})};e=__decorate([Object(o.Component)({selector:"edit-business-images",template:r(351),styles:[r(350)]}),__metadata("design:paramtypes",[i.ActivatedRoute,f.FormBuilder,n.RouterExtensions,g.ModalDialogService,o.ViewContainerRef,s.a,l.Location])],e);return e}(),O=function(){function e(e,t,r,o,a){this.route=e;this.formBuilder=t;this.router=r;this.createdAppService=o;this.location=a;this.processing=!1;this.order_list=[];this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.getOrderList(this.app_id)};e.prototype.getOrderList=function(e){var t=this;this.loader.show(this.lodaing_options);this.createdAppService.getAppOrderList(e).subscribe(function(e){console.log(e);t.order_list=e;t.visible_key=!0;t.loader.hide()},function(e){t.loader.hide();console.log(e)})};e=__decorate([Object(o.Component)({selector:"report",template:r(349),styles:[r(348)]}),__metadata("design:paramtypes",[i.ActivatedRoute,f.FormBuilder,n.RouterExtensions,s.a,l.Location])],e);return e}(),D=function(){function e(e,t,r,o,a){this.route=e;this.formBuilder=t;this.router=r;this.createdAppService=o;this.location=a;this.processing=!1;this.loader=new d.LoadingIndicator;this.lodaing_options={message:"Loading...",progress:.65,android:{indeterminate:!0,cancelable:!1,cancelListener:function(e){console.log("Loading cancelled")},max:100,progressNumberFormat:"%1d/%2d",progressPercentFormat:.53,progressStyle:1,secondaryProgress:1},ios:{details:"Additional detail note!",margin:10,dimBackground:!0,color:"#4B9ED6",backgroundColor:"yellow",userInteractionEnabled:!1,hideBezel:!0}}}e.prototype.ngOnInit=function(){var e=this.location.path().split("/");this.app_id=e[2].trim();this.order_id=this.route.snapshot.params.order;this.getAppOrderDetails(this.order_id)};e.prototype.getAppOrderDetails=function(e){var t=this;this.loader.show(this.lodaing_options);this.createdAppService.getAppOrderDetails(e).subscribe(function(e){t.order_details=e[0];t.visible_key=!0;console.log(e);t.loader.hide()},function(e){console.log(e);t.loader.hide()})};e.prototype.getDiscount=function(e,t){return Math.floor(100*(e-t)/e)+"%"};e.prototype.updateCustomerOrderPayment=function(){var e=this,t={id:this.app_id};this.loader.show(this.lodaing_options);this.createdAppService.updateCustomerOrderPayment(t).subscribe(function(t){console.log("Success");e.loader.hide();e.getAppOrderDetails(e.order_id)},function(t){e.loader.hide();console.log(t)})};e.prototype.updateCustomerOrderDelivery=function(){var e=this,t={id:this.app_id};this.loader.show(this.lodaing_options);this.createdAppService.updateCustomerOrderDelivery(t).subscribe(function(t){console.log("Success");e.loader.hide();e.getAppOrderDetails(e.order_id)},function(t){e.loader.hide();console.log(t)})};e=__decorate([Object(o.Component)({selector:"order-details",template:r(347),styles:[r(346)]}),__metadata("design:paramtypes",[i.ActivatedRoute,f.FormBuilder,n.RouterExtensions,s.a,l.Location])],e);return e}(),G=[{path:":id",component:c,children:[{path:"details",component:p},{path:"manage-app",component:h},{path:"edit-app",component:b},{path:"products",component:y},{path:"edit-product-category/:product_id",component:_},{path:"add-product-category",component:L},{path:"edit-product/:product_id",component:x},{path:"add-product/:cat_id",component:w},{path:"customers",component:v},{path:"messages",component:C},{path:"chat/:user",component:A},{path:"edit-owner-info",component:V},{path:"edit-business-images",component:T},{path:"report",component:O},{path:"order-details/:order",component:D}]}],R=function(){function e(){}e=__decorate([Object(o.NgModule)({imports:[n.NativeScriptRouterModule.forChild(G)],exports:[n.NativeScriptRouterModule]})],e);return e}(),P=r(101);r.d(t,"CreatedAppModule",function(){return E});var E=function(){function e(){}e=__decorate([Object(o.NgModule)({imports:[a.NativeScriptCommonModule,R,P.a],declarations:[c,p,h,b,y,_,L,x,w,v,C,A,V,T,O,D],schemas:[o.NO_ERRORS_SCHEMA]})],e);return e}()},346:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.thumb {\r\n    border-radius: 50%\r\n}\r\n\r\n.discounted_price {\r\n    font-weight: 600;\r\n    color: #000;\r\n}\r\n\r\n.original_price {\r\n    color: #ccc;\r\n    padding: 0 5;\r\n}\r\n\r\n.original_price.isDiscount {\r\n    text-decoration: line-through;\r\n}\r\n\r\n.discount {\r\n    color: #ccc;\r\n}"},347:function(e,t){e.exports='<ScrollView row="0">\r\n\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout padding="10">\r\n            <CardView class="whiteCard">\r\n                <StackLayout style="margin-bottom: 5px;">\r\n                    <GridLayout rows="auto, auto" columns="*, *, *, 40" class="list-group-item" padding="10" verticalAlignment="center">\r\n                        <Label row="0" col="0" [text]="order_details.customer_details.name" verticalAlignment="center"></Label>\r\n                        <Label row="1" col="0" [text]="order_details.customer_details.contact_no" class="body" verticalAlignment="center"></Label>\r\n                        <Label row="0" col="1" [text]="order_details.price" class="body" verticalAlignment="center"></Label>\r\n                        <Label row="1" col="1" *ngIf="!order_details.is_paid" text="Not Paid"></Label>\r\n                        <Label row="1" col="1" *ngIf="order_details.is_paid" text="Paid"></Label>\r\n                        <Label row="0" col="2" [text]="order_details.created_at | date:\'yy-mm-dd\'" class="body" verticalAlignment="center"></Label>\r\n                        <Label row="1" col="2" *ngIf="!order_details.delivery_status" text="Not Delivered"></Label>\r\n                        <Label row="1" col="2" *ngIf="order_details.delivery_status" text="Delivered"></Label>\r\n                        asdas\r\n                    </GridLayout>\r\n                </StackLayout>\r\n            </CardView>\r\n            <CardView class="whiteCard">\r\n                <StackLayout *ngFor="let item of order_details.order_details;let i = index">\r\n                    <GridLayout rows="*" columns="*,*" padding="10" verticalAlignment="center">\r\n                        <StackLayout row="0" col="0" verticalAlignment="center" orientation="vertical" horizontalAlignment="left">\r\n                            <Label [text]="item.product_details.product_name" textWrap="true" verticalAlignment="center" class="product_name"></Label>\r\n                            <StackLayout orientation="horizontal">\r\n                                <Label [text]="item.product_details.discounted_price" class="discounted_price" textWrap="true" *ngIf="item.product_details.discounted_price > 0"></Label>\r\n                                <Label [text]="item.product_details.price" class="original_price" textWrap="true" [ngClass]="[item.product_details.discounted_price > 0 ? \'isDiscount\' : \'\']"></Label>\r\n                                <Label [text]="getDiscount(item.product_details.price,item.product_details.discounted_price)" class="discount" textWrap="true"\r\n                                    *ngIf="item.product_details.discounted_price > 0"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout horizontalAlignment="right" verticalAlignment="center" col="1" row="0" backgroundColor="#fff">\r\n                            <GridLayout rows="*,*,*" verticalAlignment="center">\r\n                                <Label [text]="\'Quantity - \' + item.quantity" row="0" verticalAlignment="center" textAlignment="center"></Label>\r\n                                <Label [text]="\'Total cost - \' + item.total_cost" row="1" verticalAlignment="center" textAlignment="center"></Label>\r\n                                <Label [text]="\'Packaging charge - \' + item.packaging_cost" row="2" verticalAlignment="center" textAlignment="center"></Label>\r\n                            </GridLayout>\r\n                        </StackLayout>\r\n                    </GridLayout>\r\n                </StackLayout>\r\n            </CardView>\r\n            <CardView class="whiteCard">\r\n                <FlexboxLayout class="button-center">\r\n                    <Button class="btn btn-primary" *ngIf="!order_details.delivery_status" backgroundColor="#6c6969" color="#fff" width="50%" text="Make Delivered" (tap)="updateCustomerOrderDelivery()"></Button>\r\n                    <Button class="btn btn-primary" *ngIf="!order_details.is_paid" backgroundColor="#6c6969" color="#fff" width="50%" text="Make Paid" (tap)="updateCustomerOrderPayment()"></Button>\r\n                </FlexboxLayout>\r\n            </CardView>\r\n        </StackLayout>\r\n    </StackLayout>\r\n    \x3c!-- <StackLayout padding="10" *ngIf="visible_key && order_details.order_details.length > 0">\r\n        \r\n        <CardView *ngFor="let item of order_details.order_details;let i = index" class="card" elevation="0" radius="0" shadowOpacity="0" shadowOffsetWidth="0"\r\n            shadowOffsetHeight="0">\r\n            <GridLayout rows="*" columns="*,40,80,80" padding="10" verticalAlignment="center">\r\n                <Label [text]="item.product_details.product_name" textWrap="true" row="0" col="0" verticalAlignment="center" class="product_name"></Label>\r\n                <Label [text]="item.quantity" row="0" col="1" verticalAlignment="center" class="product_name" textWrap="true" ></Label>\r\n                <Label [text]="item.unit_price" row="0" col="2" verticalAlignment="center" class="product_name" textWrap="true" ></Label>\r\n                <Label [text]="item.packaging_cost" row="0" col="3" verticalAlignment="center" class="product_name" textWrap="true" ></Label>\r\n                \r\n            </GridLayout>\r\n        </CardView>\r\n        <StackLayout class="hr-light m-10"></StackLayout>\r\n        <StackLayout padding="10">\r\n            <GridLayout rows="*" columns="*,*" verticalAlignment="center">\r\n                <StackLayout verticalAlignment="center" col="0" row="0">\r\n                    <Label class="pull-left font-weight-bold" text="Total item price"></Label>\r\n                </StackLayout>\r\n                <StackLayout verticalAlignment="center" col="1" row="0">\r\n                    <Label class="pull-right font-weight-bold" [text]="order_details.price"></Label>\r\n                </StackLayout>\r\n            </GridLayout>\r\n        </StackLayout>\r\n    </StackLayout> --\x3e\r\n</ScrollView>'},348:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.thumb {\r\n    border-radius: 50%\r\n}"},349:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout padding="10" *ngIf="visible_key">\r\n            <StackLayout *ngIf="order_list.length>0">\r\n                <StackLayout borderWidth="1" borderColor="#ccc" *ngFor="let order of order_list" style="margin-bottom: 5px;" class="list-group">\r\n                    <CardView class="whiteCard">\r\n                        <GridLayout rows="auto, auto" columns="*, *, *, 40" class="list-group-item" padding="10" verticalAlignment="center">\r\n                            <Label row="0" col="0" [text]="order.customer_details.name" verticalAlignment="center"></Label>\r\n                            <Label row="1" col="0" [text]="order.customer_details.contact_no" class="body" verticalAlignment="center"></Label>\r\n                            <Label row="0" col="1" [text]="order.price" class="body" verticalAlignment="center"></Label>\r\n                            <Label row="1" col="1" *ngIf="!order.is_paid" text="Not Paid"></Label>\r\n                            <Label row="1" col="1" *ngIf="order.is_paid" text="Paid"></Label>\r\n                            <Label row="0" col="2" [text]="order.created_at | date:\'yy-mm-dd\'" class="body" verticalAlignment="center"></Label>\r\n                            <Label row="1" col="2" *ngIf="!order.delivery_status" text="Not Delivered"></Label>\r\n                            <Label row="1" col="2" *ngIf="order.delivery_status" text="Delivered"></Label>\r\n                            <Label row="0" col="3" class="fa fa-eye" [text]="\'fa-eye\' | fonticon" verticalAlignment="center" [nsRouterLink]="[\'/created-app/\', app_id, \'order-details\', order.id]"></Label>\r\n                            \r\n                            \r\n                        </GridLayout>\r\n                    </CardView>\r\n                </StackLayout>\r\n            </StackLayout>\r\n            <StackLayout *ngIf="order_list.length==0">\r\n                <StackLayout borderWidth="1" borderColor="#ccc" style="margin-bottom: 5px;" class="list-group">\r\n                    <CardView class="whiteCard">\r\n                        <GridLayout rows="auto" columns="*" class="list-group-item" padding="10" verticalAlignment="center">\r\n                            <Label row="0" col="0" text="Sorry! you don\'t have any order." verticalAlignment="center"></Label>\r\n                        </GridLayout>\r\n                    </CardView>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},350:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.card {\r\n    background-color: transparent;\r\n    color: #000;\r\n    width: 25%;\r\n    \r\n}\r\n\r\n.app-icon {\r\n    border-radius: 10;\r\n    background: #fff;\r\n    padding: 3;\r\n    margin: 5 5 0 5;\r\n}\r\n\r\n.app-icon Image {\r\n    width: 50;\r\n    height: 50;\r\n    border-radius: 50%;\r\n    background: #f9ece3;\r\n}\r\n\r\n.app-name {\r\n    font-size: 10;\r\n    text-align: center;\r\n    margin-top: 2;\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}"},351:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <FlexboxLayout flexWrap="wrap" justifyContent="space-around" alignItems="flex-start">\r\n            <CardView *ngFor="let item of gallery_images" class="card" elevation="0" radius="0" shadowOpacity="0" shadowOffsetWidth="0"\r\n                shadowOffsetHeight="0" width="250px" height="250px" alignSelf="flex-start">\r\n                <StackLayout orientation="vertical">\r\n                    <StackLayout class="app-icon"  (tap)="pickBusinessImages(item.id)">\r\n                        <Label class="fa change_logo" [text]="\'fa-edit\' | fonticon" width="20" height="20"></Label>\r\n                        <Image [src]="item.app_img" *ngIf="item.app_img != \'\'"></Image>\r\n                        <Image src="~/images/no-logo.png" *ngIf="item.app_img == \'\'"></Image>\r\n                    </StackLayout>\r\n                </StackLayout>\r\n            </CardView>\r\n            <CardView  class="card" *ngIf="gallery_images.length<3" elevation="0" radius="0" shadowOpacity="0" shadowOffsetWidth="0"\r\n                shadowOffsetHeight="0" width="250px" height="250px" alignSelf="flex-start">\r\n                <StackLayout orientation="vertical">\r\n                    <StackLayout class="app-icon"  (tap)="pickNewBusinessImages()">\r\n                        <Label class="fa change_logo" [text]="\'fa-edit\' | fonticon" width="20" height="20"></Label>\r\n                        <Label class="app-name" text="New"></Label>\r\n                    </StackLayout>\r\n                </StackLayout>\r\n            </CardView>\r\n        </FlexboxLayout>\r\n    </StackLayout>\r\n</ScrollView>'},352:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.full-content {\r\n    margin-left: 30;\r\n    margin-right: 30;\r\n    flex-grow: 2;\r\n    vertical-align: middle;\r\n}\r\n.card {\r\n    background-color: transparent;\r\n    color: #000;\r\n    width: 25%;\r\n    \r\n}\r\n\r\n.app-icon {\r\n    border-radius: 10;\r\n    background: #fff;\r\n    padding: 3;\r\n    margin: 5 5 0 5;\r\n}\r\n\r\n.app-icon Image {\r\n    width: 50;\r\n    height: 50;\r\n    border-radius: 50%;\r\n    background: #f9ece3;\r\n}\r\n"},353:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout class="form" [formGroup]="form" novalidate>\r\n            <FlexboxLayout flexWrap="wrap" justifyContent="space-around" alignItems="flex-start">\r\n                <CardView class="card" elevation="0" borderColor="#6c6969" shadowOffsetWidth="0" shadowOffsetHeight="0" alignSelf="flex-start">\r\n                    <StackLayout orientation="vertical" (tap)="pickLogo()">\r\n                        <StackLayout class="app-icon">\r\n                            <Label class="fa change_logo" [text]="\'fa-edit\' | fonticon" width="20" height="20"></Label>\r\n                            <Image [src]="owner_details.owner_pic" *ngIf="owner_details.owner_pic != \'\'"></Image>\r\n                            <Image src="~/images/no-logo.png" *ngIf="owner_details.owner_pic == \'\'"></Image>\r\n                        </StackLayout>\r\n                    </StackLayout>\r\n                </CardView>\r\n            </FlexboxLayout>\r\n            <StackLayout class="full-content">\r\n                <StackLayout class="edit-container">\r\n                    <GridLayout rows="auto, auto, auto, auto">\r\n                        <StackLayout class="input-filld" row="0">\r\n                            <TextField hint="Owner Name" class="input input-border cyan-border m-t-10" returnKeyType="next"  formControlName="owner_name" [(ngModel)]="owner_details.owner_name" [ngClass]="displayFieldCss(\'owner_name\')" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'owner_name\')" class="invalid-feedback">\r\n                                <Label text="Owner Name is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="1">\r\n                            <DropDown #dd class="input input-border cyan-border m-t-10"formControlName="owner_designation" [items]="designations"  selectedIndex="{{ selectedIndex }}" [(ngModel)]="owner_details.owner_designation" [hint]="hint"\r\n                                (selectedIndexChanged)="onchange($event)" height="60" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"></DropDown>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="2">\r\n                            <TextField hint="Establishment Year" class="input input-border cyan-border m-t-10" returnKeyType="next"\r\n                                 formControlName="business_est_year" [(ngModel)]="owner_details.business_est_year" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"></TextField>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="3">\r\n                            <TextField hint="Business Location" class="input input-border cyan-border m-t-10" returnKeyType="next"\r\n                                 formControlName="store_address" [(ngModel)]="owner_details.store_address"\r\n                                (tap)="searchLocation()" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"></TextField>\r\n                        </StackLayout>                   \r\n                    </GridLayout>\r\n                    <Button class="btn btn-primary" text="Update" (tap)="updateOwnerInfo()"  backgroundColor="#6c6969" color="#fff" width="50%">\r\n                    </Button>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},354:function(e,t){e.exports='.wallpaper{\r\n    /* background: #f2f2f2; */\r\n    background-image:url("~/images/wallpaper.jpg")\r\n}\r\n\r\n\r\n.message-box{width:100%;align-items:flex-end}.message-box .icon{padding:5;flex-grow:0;border-radius:50%}.message-box .text-area{flex-grow:1;align-items:flex-end}.message-box .text-area .text-view{flex-grow:1}\r\n.message-box{background-color:#FAFAFA;border-top-color:#D6D3CD;border-top-width:1}\r\n\r\n.messages-area{width:100%}.messages-area .messages{flex-direction:column;align-items:flex-start;padding:0 10 5 10}.messages-area .messages .message-bubble{margin:10 15 2 0;padding:0}.messages-area .messages .message-bubble.myself{align-self:flex-end;margin-right:0;margin-left:15}.messages-area .messages .message-bubble.myself .message-bubble-content{background-color:#dcf8c6}.messages-area .messages .message-bubble.continuation{margin-top:1}.messages-area .messages .message-bubble .message-bubble-content{align-items:flex-start;flex-wrap:wrap;justify-content:flex-end;border-radius:8;background-color:white}.messages-area .messages .message-bubble .message-bubble-content .message-text{color:#8D1B1B;font-size:15;margin:5}.messages-area .messages .message-bubble .message-bubble-content .meta{align-self:flex-end;justify-content:flex-end;margin:0 5 5 5}.messages-area .messages .message-bubble .message-bubble-content .meta .time{font-size:13;opacity:.7;margin-right:5}.messages-area .messages .message-bubble .message-bubble-content .meta .time.ios{font-size:11;opacity:.4}.messages-area .messages .message-bubble .message-bubble-content .meta .check{font-size:14;padding-top:2;margin-left:-4}.messages-area .messages .message-bubble .message-bubble-content .meta .check.ios{opacity:.6}.messages-area .messages .message-bubble .message-bubble-content .meta .check.blue{color:#52c5f7}.messages-area .messages .message-bubble .message-bubble-content .meta .check.blue.ios{color:#2F97F3;opacity:1}\r\n\r\n'},355:function(e,t){e.exports='<GridLayout rows="*, auto" columns="auto" class="wallpaper">\r\n    <StackLayout row="0" column="0" width="100%">\r\n        <ScrollView class="messages-area" #ScrollList>\r\n            <FlexboxLayout class="messages">\r\n                <StackLayout [shadow]="2" cornerRadius="20" *ngFor="let message of messages; let idx = index" class="message-bubble" [class.myself]="message.sender">\r\n                    <FlexboxLayout class="message-bubble-content">\r\n                        <Label class="message-text" [text]="message.text" textWrap="true"></Label>\r\n                        <FlexboxLayout class="meta">\r\n                            <Label [text]="message.created | date: \'shortTime\'" class="time"></Label>\r\n                            \x3c!-- <Label *ngIf="message.sender" [text]="\'fa-check\' | fonticon" class="fa check" [class.blue]="isViewed(message)"></Label> --\x3e\r\n                        </FlexboxLayout>\r\n                    </FlexboxLayout>\r\n                </StackLayout>\r\n            </FlexboxLayout>\r\n        </ScrollView>\r\n    </StackLayout>\r\n    <StackLayout row="1" column="0" width="100%">\r\n        <FlexboxLayout class="message-box">\r\n            <FlexboxLayout class="text-area">\r\n                <TextField [(ngModel)]="message" hint="Type a message" class="text-view" borderColor="#fff" borderRadius="1" borderWidth="1"></TextField>\r\n                <Button [text]="\'fa-paper-plane\' | fonticon" class="fa send" (tap)="send()" backgroundColor="#fff" borderColor="#fff" borderWidth="1"></Button>\r\n            </FlexboxLayout>\r\n        </FlexboxLayout>\r\n    </StackLayout>\r\n</GridLayout>'},356:function(e,t){e.exports=".thumb {\r\n    border-radius: 50%\r\n}\r\n\r\n.unread {\r\n    text-align: center;\r\n    min-width: 20;\r\n    min-height: 20;\r\n    color: #fff;\r\n    font-size: 10;\r\n    border-radius: 50%;\r\n    background-color: #3C5AFD\r\n}\r\n\r\n.time {\r\n    color: #5c687c;\r\n    font-size: 12\r\n}"},357:function(e,t){e.exports='<ListView [items]="chats" class="list-group">\r\n    <ng-template let-chat="item" let-index="index">\r\n      <GridLayout rows="auto, auto" columns="auto, *, auto" class="list-group-item" [nsRouterLink]="[\'/created-app/chat\', app_id, chat.id]">\r\n        <Image row="0" col="0" rowSpan="2" src="~/images/user.png" class="thumb"></Image>\r\n        <Label row="0" col="1" text="A"></Label>\r\n        <Label row="1" col="1" [text]="chat.last_message" class="body"></Label>\r\n        <Label row="0" col="2" [text]="chat.last_messages_time | date: \'shortTime\'"\r\n          class="body time time-unread"></Label>\r\n        <StackLayout row="1" col="2" orientation="horizontal" class="m-x-auto">\r\n          <Label [text]="chat.how_many_messages" class="body unread"></Label>\r\n        </StackLayout>\r\n      </GridLayout>\r\n    </ng-template>\r\n  </ListView>'},358:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.thumb {\r\n    border-radius: 50%\r\n}"},359:function(e,t){e.exports='<StackLayout class="full-dashboard">\r\n    <StackLayout padding="10" *ngIf="visible_key">\r\n        <StackLayout *ngIf="customer_list.length>0">\r\n            <StackLayout borderWidth="1" borderColor="#ccc" *ngFor="let customer of customer_list" style="margin-bottom: 5px;" class="list-group">\r\n                <CardView class="whiteCard">\r\n                    <GridLayout rows="auto, auto" columns="auto, *, auto" class="list-group-item" padding="10" verticalAlignment="center">\r\n                        <Image row="0" col="0" rowSpan="2" src="~/images/user.png" class="thumb" verticalAlignment="center"></Image>\r\n                        <Label row="0" col="1" [text]="customer.customer.customer_name" verticalAlignment="center"></Label>\r\n                        <Label row="1" col="1" [text]="customer.customer.email" class="body" verticalAlignment="center"></Label>\r\n                        <Label row="0" col="2" [text]="customer.customer.contact_no" class="body" verticalAlignment="center"></Label>\r\n                    </GridLayout>\r\n                </CardView>\r\n            </StackLayout>\r\n        </StackLayout>\r\n        <StackLayout *ngIf="customer_list.length==0">\r\n        <StackLayout borderWidth="1" borderColor="#ccc" style="margin-bottom: 5px;" class="list-group">\r\n            <CardView class="whiteCard">\r\n                <GridLayout rows="auto" columns="*" class="list-group-item" padding="10" verticalAlignment="center">\r\n                    <Label row="0" col="0" text="Sorry! you don\'t have any customer." verticalAlignment="center"></Label>\r\n                </GridLayout>\r\n            </CardView>\r\n        </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</StackLayout>'},360:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.full-content {\r\n    margin-left: 30;\r\n    margin-right: 30;\r\n    flex-grow: 2;\r\n    vertical-align: middle;\r\n}\r\n"},361:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout class="full-content">\r\n            <StackLayout class="edit-container">\r\n                <StackLayout class="form" [formGroup]="form" novalidate>\r\n                    <GridLayout rows="auto, auto, auto, auto, auto">\r\n                        <StackLayout class="input-filld" row="0">\r\n                            <TextField hint="Product Name" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next" \r\n                                formControlName="product_name" [(ngModel)]="product_data.product_name" [ngClass]="displayFieldCss(\'product_name\')"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'product_name\')" class="invalid-feedback">\r\n                                <Label text="Product Name is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="1">\r\n                            <TextField hint="Price" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next"\r\n                                formControlName="price" [(ngModel)]="product_data.price" [ngClass]="displayFieldCss(\'price\')"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'price\')" class="invalid-feedback">\r\n                                <Label text="Price is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="2">\r\n                            <TextField hint="Discounted Price" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next"\r\n                                 formControlName="discounted_price" [(ngModel)]="product_data.discounted_price"></TextField>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="3">\r\n                            <TextField hint="Packing Charges" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next"\r\n                                 formControlName="packing_charges" [(ngModel)]="product_data.packing_charges"></TextField>\r\n                        </StackLayout>\r\n\r\n                        <StackLayout class="input-filld" row="4">\r\n                            <TextField hint="Tags" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next" \r\n                                formControlName="tags" [(ngModel)]="product_data.tags"></TextField>\r\n                        </StackLayout>\r\n\r\n                    </GridLayout>\r\n\r\n                    <Button class="btn btn-primary" text="Update" (tap)="updateProduct()" backgroundColor="#6c6969" color="#fff" width="50%">\r\n                    </Button>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},362:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.full-content {\r\n    margin-left: 30;\r\n    margin-right: 30;\r\n    flex-grow: 2;\r\n    vertical-align: middle;\r\n}\r\n"},363:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout class="full-content">\r\n            <StackLayout class="edit-container">\r\n                <StackLayout class="form" [formGroup]="form" novalidate>\r\n                    <GridLayout rows="auto, auto, auto, auto, auto">\r\n                        <StackLayout class="input-filld" row="0">\r\n                            <TextField hint="Product Name" class="input input-border cyan-border m-t-10"  borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next"\r\n                                formControlName="product_name" [(ngModel)]="product_data.product_name" [ngClass]="displayFieldCss(\'product_name\')"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'product_name\')" class="invalid-feedback">\r\n                                <Label text="Product Name is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="1">\r\n                            <TextField hint="Price" class="input input-border cyan-border m-t-10"  borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next" \r\n                                formControlName="price" [(ngModel)]="product_data.price" [ngClass]="displayFieldCss(\'price\')"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'price\')" class="invalid-feedback">\r\n                                <Label text="Price is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="2">\r\n                            <TextField hint="Discounted Price" class="input input-border cyan-border m-t-10"  borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next"\r\n                                 formControlName="discounted_price" [(ngModel)]="product_data.discounted_price"></TextField>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="3">\r\n                            <TextField hint="Packing Charges" class="input input-border cyan-border m-t-10"  borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next"\r\n                                 formControlName="packing_charges" [(ngModel)]="product_data.packing_charges"></TextField>\r\n                        </StackLayout>\r\n\r\n                        <StackLayout class="input-filld" row="4">\r\n                            <TextField hint="Tags" class="input input-border cyan-border m-t-10"  borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next" \r\n                                formControlName="tags" [(ngModel)]="product_data.tags"></TextField>\r\n                        </StackLayout>\r\n                    </GridLayout>\r\n\r\n                    <Button class="btn btn-primary" text="Submit" (tap)="createProduct()" backgroundColor="#6c6969" color="#fff" width="50%">\r\n                    </Button>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},364:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.full-content {\r\n    margin-left: 30;\r\n    margin-right: 30;\r\n    flex-grow: 2;\r\n    vertical-align: middle;\r\n}\r\n"},365:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout class="full-content">\r\n            <StackLayout class="edit-container">\r\n                <StackLayout class="form" [formGroup]="form" novalidate>\r\n                    <GridLayout rows="auto, auto">\r\n                        <StackLayout class="input-filld" row="0">\r\n                            <TextField hint="Product Category" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next"\r\n                                formControlName="category_name" [(ngModel)]="product_category_data.category_name"\r\n                                [ngClass]="displayFieldCss(\'category_name\')"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'category_name\')" class="invalid-feedback">\r\n                                <Label text="Product Category is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="1">\r\n                            <TextField hint="Description" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff" returnKeyType="next" [isEnabled]="!processing"\r\n                                formControlName="description" [(ngModel)]="product_category_data.description"></TextField>\r\n\r\n                        </StackLayout>\r\n                    </GridLayout>\r\n\r\n                    <Button class="btn btn-primary" text="Submit" (tap)="createProductCategory()" backgroundColor="#6c6969" color="#fff" width="50%">\r\n                    </Button>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},366:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.full-content {\r\n    margin-left: 30;\r\n    margin-right: 30;\r\n    flex-grow: 2;\r\n    vertical-align: middle;\r\n}\r\n"},367:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout class="full-content">\r\n            <StackLayout class="edit-container">\r\n                <StackLayout class="form" [formGroup]="form" novalidate>\r\n                    <GridLayout rows="auto, auto">\r\n                        <StackLayout class="input-filld" row="0">\r\n                            <TextField hint="Product Category" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"\r\n                                returnKeyType="next" [isEnabled]="!processing" formControlName="category_name" [(ngModel)]="product_category_data.category_name"\r\n                                [ngClass]="displayFieldCss(\'category_name\')"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'category_name\')" class="invalid-feedback">\r\n                                <Label text="Product Category is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n                        <StackLayout class="input-filld" row="1">\r\n                            <TextField hint="Description" class="input input-border cyan-border m-t-10" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"\r\n                                returnKeyType="next" [isEnabled]="!processing" formControlName="description" [(ngModel)]="product_category_data.description"></TextField>\r\n\r\n                        </StackLayout>\r\n\r\n                        <ActivityIndicator rowSpan="3" [busy]="processing"></ActivityIndicator>\r\n                    </GridLayout>\r\n\r\n                    <Button class="btn btn-primary" text="Update" [isEnabled]="!processing" (tap)="updateProductCategory()" backgroundColor="#6c6969"\r\n                        color="#fff" width="50%">\r\n                    </Button>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},368:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n\r\n.category_product_accordian{\r\n    margin: 10;\r\n}\r\n\r\n.category_heading{\r\n    padding: 10;\r\n    color: #000;\r\n}\r\n\r\n.product_list{\r\n    padding: 10;\r\n}\r\n.discounted_price{\r\n    font-weight: 600;\r\n    color: #000;\r\n}\r\n.original_price{    \r\n    color: #ccc;\r\n    padding: 0 5;\r\n}\r\n\r\n.original_price.isDiscount{\r\n    text-decoration: line-through;\r\n}\r\n.discount{\r\n    color: #ccc;\r\n}\r\n.product_name{\r\n    /* font-size: 18; */\r\n}\r\n.quantity{\r\n    text-align: center;\r\n    padding: 10 0;\r\n}"},369:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <StackLayout orientation="vertical">\r\n            <Button textWrap="true" width="33.33%" [nsRouterLink]="[\'/created-app/\', app_id,\'add-product-category\']">\r\n                <FormattedString>\r\n                    <Span class="fa fa-plus" [text]="\'fa-plus\' | fonticon"></Span>\r\n                    <Span text="Add New Category"></Span>\r\n                </FormattedString>\r\n            </Button>\r\n\r\n            <Accordion [items]="category_list" itemTapped="tapped" class="category_product_accordian" separatorColor="transparent">\r\n\r\n                <ng-template accordionHeaderTemplate let-item="item" let-i="index">\r\n                    <GridLayout columns="*,*,40,40" rows="*" class="category_heading" borderWidth="1" borderColor="#ccc">\r\n                        <Label [text]="item.category_name" textWrap="true" row="0" col="0"></Label>\r\n                        <StackLayout orientation="horizontal" row="0" col="1" [nsRouterLink]="[\'/created-app/\', app_id, \'add-product\', item.id]">\r\n                            <Label class="fa fa-plus" [text]="\'fa-plus\' | fonticon"></Label>\r\n                            <Label text="Add Product" textWrap="true"></Label>\r\n                        </StackLayout>\r\n                        <Label class="fa fa-edit" [text]="\'fa-edit\' | fonticon" row="0" col="2" [nsRouterLink]="[\'/created-app/\', app_id, \'edit-product-category\', item.id]"></Label>\r\n                        <Label class="fa fa-trash" [text]="\'fa-trash\' | fonticon" row="0" col="3" (tap)="deleteProductCategory(item.id)"></Label>\r\n                    </GridLayout>\r\n                </ng-template>\r\n\r\n                <ng-template accordionItemTemplate let-item="item" let-parent="parentIndex" let-even="even" let-child="childIndex">\r\n                    <StackLayout class="product_list" borderRightWidth="1" borderLeftWidth="1" borderColor="#ccc">\r\n                        <CardView class="whiteCard">\r\n                            <GridLayout rows="*" columns="*,*,40,40" padding="5" verticalAlignment="center" [nsRouterLink]="[\'/created-app/\', app_id, \'edit-product\', item.id]">\r\n                                <Label [text]="item.product_name" textWrap="true" row="0" col="0" verticalAlignment="center" class="product_name"></Label>\r\n                                <StackLayout row="0" col="1" verticalAlignment="center" orientation="horizontal">\r\n                                    <Label [text]="item.discounted_price" class="discounted_price" textWrap="true" *ngIf="item.discounted_price > 0"></Label>\r\n                                    <Label [text]="item.price" class="original_price" textWrap="true" [ngClass]="[item.discounted_price > 0 ? \'isDiscount\' : \'\']"></Label>\r\n                                    <Label [text]="getDiscount(item.price,item.discounted_price)" class="discount" textWrap="true" *ngIf="item.discounted_price > 0"></Label>\r\n                                </StackLayout>\r\n                                <Label class="fa fa-edit" [text]="\'fa-edit\' | fonticon" row="0" col="2"></Label>\r\n                                <Label class="fa fa-trash" [text]="\'fa-trash\' | fonticon" row="0" col="3" (tap)="deleteProduct(item.id)"></Label>\r\n                            </GridLayout>\r\n                        </CardView>\r\n\r\n                    </StackLayout>\r\n                </ng-template>\r\n\r\n                <ng-template accordionFooterTemplate let-item="item" let-i="index">\r\n                    <GridLayout backgroundColor="yellow" columns="auto,*">\r\n                        <Label [text]="item.category_name"></Label>\r\n                        <Label col="1" text="-"></Label>\r\n                    </GridLayout>\r\n                </ng-template>\r\n\r\n            </Accordion>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},370:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.full-content {\r\n    margin-left: 30;\r\n    margin-right: 30;\r\n    flex-grow: 2;\r\n    vertical-align: middle;\r\n}\r\n.card {\r\n    background-color: transparent;\r\n    color: #000;\r\n    width: 25%;\r\n    \r\n}\r\n\r\n.app-icon {\r\n    border-radius: 10;\r\n    background: #fff;\r\n    padding: 3;\r\n    margin: 5 5 0 5;\r\n}\r\n\r\n.app-icon Image {\r\n    width: 50;\r\n    height: 50;\r\n    border-radius: 50%;\r\n    background: #f9ece3;\r\n}\r\n"},371:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <FlexboxLayout flexWrap="wrap" justifyContent="space-around" alignItems="flex-start">\r\n            <CardView class="card" elevation="0" borderColor="#6c6969" shadowOffsetWidth="0" shadowOffsetHeight="0" alignSelf="flex-start">\r\n                <StackLayout orientation="vertical">\r\n                    <StackLayout class="app-icon">\r\n                        <Image [src]="app_data.logo" *ngIf="app_data.logo != \'\'"></Image>\r\n                        <Image src="~/images/no-logo.png" *ngIf="app_data.logo == \'\'"></Image>\r\n                    </StackLayout>\r\n                    <Label class="app-name" [text]="app_data.business_name"></Label>\r\n                </StackLayout>\r\n            </CardView>\r\n        </FlexboxLayout>\r\n        <StackLayout class="full-content">\r\n            <StackLayout class="edit-container">\r\n                <StackLayout class="form" [formGroup]="form" novalidate>\r\n                    <GridLayout rows="auto, auto">\r\n                        <StackLayout class="input-filld" row="0">\r\n                            <TextField hint="Name Of Your Business" class="input input-border cyan-border m-t-10" returnKeyType="next"\r\n                               formControlName="business_name" [(ngModel)]="app_data.business_name"\r\n                                [ngClass]="displayFieldCss(\'business_name\')" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'business_name\')" class="invalid-feedback">\r\n                                <Label text="Name Of Your Business is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>\r\n\r\n                        <StackLayout class="input-filld" row="1">\r\n                            <TextField hint="Description Of Your Business" class="input input-border cyan-border m-t-10" returnKeyType="done"\r\n                                formControlName="business_description" [(ngModel)]="app_data.business_description"\r\n                                [ngClass]="displayFieldCss(\'business_description\')" borderRadius="2" borderColor="#6c6969" backgroundColor="#fff"></TextField>\r\n                            <StackLayout *ngIf="isFieldValid(\'business_description\')" class="invalid-feedback">\r\n                                <Label text="Description Of Your Business is required"></Label>\r\n                            </StackLayout>\r\n                        </StackLayout>                  \r\n                    </GridLayout>\r\n\r\n                    <Button class="btn btn-primary" text="Update" (tap)="updateAppInfo()" backgroundColor="#6c6969" color="#fff" width="50%">\r\n                    </Button>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </StackLayout>\r\n    </StackLayout>\r\n</ScrollView>'},372:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.card {\r\n    background-color: transparent;\r\n    color: #000;\r\n    width: 25%;\r\n    \r\n}\r\n\r\n.app-icon {\r\n    border-radius: 10;\r\n    background: #fff;\r\n    padding: 3;\r\n    margin: 5 5 0 5;\r\n}\r\n\r\n.app-icon Image {\r\n    width: 50;\r\n    height: 50;\r\n    border-radius: 50%;\r\n    background: #f9ece3;\r\n}\r\n\r\n.app-name {\r\n    font-size: 10;\r\n    text-align: center;\r\n    margin-top: 2;\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.action-section {\r\n    background: #ffffff;\r\n    padding: 50px 25px;\r\n}\r\n.action-section .fa\r\n{\r\n    font-size: 25;\r\n    color:#000;\r\n}\r\n.action-text {\r\n    font-size: 14;\r\n    color: #000;\r\n}\r\n.action-section-odd {\r\n    background: #CCCCCC;\r\n    padding: 50px 25px;\r\n}\r\n.action-section-odd .fa\r\n{\r\n    font-size: 25;\r\n    color:#000;\r\n}\r\n.action-text {\r\n    font-size: 14;\r\n    color: #000;\r\n}"},373:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <FlexboxLayout flexWrap="wrap" justifyContent="space-around" alignItems="flex-start">\r\n            <CardView class="card" elevation="0" borderColor="#6c6969" shadowOffsetWidth="0" shadowOffsetHeight="0" alignSelf="flex-start">\r\n                <StackLayout orientation="vertical">\r\n                    <StackLayout class="app-icon" (tap)="pickLogo()">\r\n                        <Label class="fa change_logo" [text]="\'fa-edit\' | fonticon" width="20" height="20"></Label>\r\n                        <Image [src]="app_data.logo" *ngIf="app_data.logo != \'\'"></Image>\r\n                        <Image src="~/images/no-logo.png" *ngIf="app_data.logo == \'\'"></Image>\r\n                    </StackLayout>\r\n                    <Label class="app-name" [text]="app_data.business_name"></Label>\r\n                </StackLayout>\r\n            </CardView>\r\n        </FlexboxLayout>\r\n        <GridLayout rows="auto, auto, auto, auto,auto,auto">\r\n            <GridLayout class="action-section" VerticalAlignment="center" row="0" rows="*" columns="40,*,40" [nsRouterLink]="[\'/created-app/\', app_id, \'edit-app\']">\r\n                <Label class="fa fa-edit" [text]="\'fa-edit\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Edit App" row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            <GridLayout class="action-section-odd" VerticalAlignment="center" row="1" rows="*" columns="40,*,40" [nsRouterLink]="[\'/created-app/\', app_id, \'products\']">\r\n                <Label class="fa fa-edit" [text]="\'fa-edit\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Edit Product" row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            <GridLayout class="action-section" VerticalAlignment="center" rows="*" columns="40,*,40" row="2" [nsRouterLink]="[\'/created-app/\', app_id, \'edit-owner-info\']">\r\n                <Label class="fa fa-edit" [text]="\'fa-edit\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Edit Owner Info" row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            <GridLayout class="action-section-odd" VerticalAlignment="center" rows="*" columns="40,*,40" row="3" [nsRouterLink]="[\'/created-app/\', app_id, \'edit-business-images\']">\r\n                <Label class="fa fa-edit" [text]="\'fa-edit\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Edit Business Images" row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n        </GridLayout>\r\n    </StackLayout>\r\n</ScrollView>'},374:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.card {\r\n    background-color: transparent;\r\n    color: #000;\r\n    width: 25%;\r\n    \r\n}\r\n\r\n.app-icon {\r\n    border-radius: 10;\r\n    background: #fff;\r\n    padding: 3;\r\n    margin: 5 5 0 5;\r\n}\r\n\r\n.app-icon Image {\r\n    width: 50;\r\n    height: 50;\r\n    border-radius: 50%;\r\n    background: #f9ece3;\r\n}\r\n\r\n.app-name {\r\n    font-size: 10;\r\n    text-align: center;\r\n    margin-top: 2;\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.action-section {\r\n    background: #ffffff;\r\n    padding: 50px 25px;\r\n}\r\n.action-section .fa\r\n{\r\n    font-size: 25;\r\n    color:#000;\r\n}\r\n.action-text {\r\n    font-size: 14;\r\n    color: #000;\r\n}\r\n.action-section-odd {\r\n    background: #CCCCCC;\r\n    padding: 50px 25px;\r\n}\r\n.action-section-odd .fa\r\n{\r\n    font-size: 25;\r\n    color:#000;\r\n}\r\n.action-text {\r\n    font-size: 14;\r\n    color: #000;\r\n}"},375:function(e,t){e.exports='<ScrollView row="0">\r\n    <StackLayout class="full-dashboard">\r\n        <FlexboxLayout flexWrap="wrap" justifyContent="space-around" alignItems="flex-start">\r\n            <CardView  class="card" elevation="0" borderColor="#6c6969" shadowOffsetWidth="0" shadowOffsetHeight="0" alignSelf="flex-start">\r\n                <StackLayout orientation="vertical">\r\n                    <StackLayout class="app-icon">\r\n                        <Image [src]="app_data.logo" *ngIf="app_data.logo != \'\'"></Image>\r\n                        <Image src="~/images/no-logo.png" *ngIf="app_data.logo == \'\'"></Image>\r\n                    </StackLayout>\r\n                    <Label class="app-name" [text]="app_data.business_name"></Label>\r\n                </StackLayout>\r\n            </CardView>\r\n        </FlexboxLayout>\r\n        <GridLayout rows="auto, auto, auto, auto,auto">\r\n            <GridLayout class="action-section"  VerticalAlignment="center" row="0" rows="*" columns="40,*,40" [nsRouterLink]="[\'/created-app/\', app_id, \'manage-app\']">\r\n                <Label class="fa fa-building-o" [text]="\'fa-building-o\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Manage App" row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            <GridLayout class="action-section-odd" VerticalAlignment="center" row="1" rows="*" columns="40,*,40" [nsRouterLink]="[\'/created-app/\', app_id, \'report\']">\r\n                <Label class="fa fa-newspaper-o" [text]="\'fa-newspaper-o\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Your Orders" row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            <GridLayout class="action-section" VerticalAlignment="center" rows="*" columns="40,*,40" row="2" [nsRouterLink]="[\'/created-app/\', app_id, \'messages\']">\r\n                <Label class="fa fa-commenting-o" [text]="\'fa-commenting-o\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Messages" row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            <GridLayout class="action-section-odd" VerticalAlignment="center" rows="*" columns="40,*,40" row="3" [nsRouterLink]="[\'/created-app/\', app_id, \'customers\']">\r\n                <Label class="fa fa-users" [text]="\'fa-users\' | fonticon"  row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="My Customer"  row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            <GridLayout class="action-section" VerticalAlignment="center" rows="*" columns="40,*,40" row="4" (tap)="shareApp()">\r\n                <Label class="fa fa-share-alt" [text]="\'fa-share-alt\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Market your App"  row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout>\r\n            \x3c!-- <GridLayout class="action-section-odd" VerticalAlignment="center" rows="*" columns="40,*,40" row="5">\r\n                <Label class="fa fa-building-o" [text]="\'fa-building-o\' | fonticon" row="0" col="0" VerticalAlignment="center"></Label>\r\n                <Label class="action-text" text="Subscription"  row="0" col="1" VerticalAlignment="center"></Label>\r\n                <Label class="fa fa-chevron-right" [text]="\'fa-chevron-right\' | fonticon" row="0" col="2" VerticalAlignment="center"></Label>\r\n            </GridLayout> --\x3e\r\n        </GridLayout>\r\n    </StackLayout>\r\n</ScrollView>'},376:function(e,t){e.exports=".full-dashboard {\r\n    background: #f9ece3;\r\n    padding: 10 5;\r\n}\r\n\r\n.card {\r\n    background-color: transparent;\r\n    color: #000;\r\n    width: 25%;\r\n    \r\n}\r\n\r\n.app-icon {\r\n    border-radius: 10;\r\n    background: #fff;\r\n    padding: 3;\r\n    margin: 5 5 0 5;\r\n}\r\n\r\n.app-icon Image {\r\n    width: 50;\r\n    height: 50;\r\n    border-radius: 50%;\r\n    background: #f9ece3;\r\n}\r\n\r\n.app-name {\r\n    font-size: 10;\r\n    text-align: center;\r\n    margin-top: 2;\r\n    white-space: nowrap; \r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.action-section {\r\n    background: #ffffff;\r\n    padding: 50px 25px;\r\n}\r\n.action-section .fa\r\n{\r\n    font-size: 25;\r\n    color:#000;\r\n}\r\n.action-text {\r\n    font-size: 14;\r\n    color: #000;\r\n}\r\n.action-section-odd {\r\n    background: #CCCCCC;\r\n    padding: 50px 25px;\r\n}\r\n.action-section-odd .fa\r\n{\r\n    font-size: 25;\r\n    color:#000;\r\n}\r\n.action-text {\r\n    font-size: 14;\r\n    color: #000;\r\n}"},377:function(e,t){e.exports='<app-action-bar [appId]="app_id"></app-action-bar>\r\n<GridLayout rows="*">\r\n    <DockLayout stretchLastChild="true">\r\n        <GridLayout rows="*">\r\n            <router-outlet></router-outlet>\r\n        </GridLayout>\r\n    </DockLayout>\r\n</GridLayout>'}}]);